{{> nav }}
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="chrome=1">
<title>Assets scanning</title>

<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta name="copyright" content="This project is maintained by YY">
<meta name="description" content="QuaggaJS is an advanced barcode-reader written in JavaScript">
<meta name="keywords" content="barcode, javascript, canvas, computer vision, image processing, ean, code128">
<meta name="robots" content="index,follow">

<link rel="canonical" href="https://serratus.github.io/v1.0.0-beta.1/examples/scan-to-input/"> {{!--Below is a styles
sheet that was causing format issues. --}} {{!--
<link rel="stylesheet" href="https://serratus.github.io/quaggaJS/stylesheets/styles.css"> --}}
<link rel="stylesheet" href="https://serratus.github.io/quaggaJS/stylesheets/example.css">
<link rel="stylesheet" href="https://serratus.github.io/quaggaJS/stylesheets/pygment_trac.css">

<!--[if lt IE 9]>
    <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
<script async="" src="https://www.google-analytics.com/analytics.js"></script>
<script>
    var host = "serratus.github.io";
    if ((host == window.location.host) && (window.location.protocol != "https:")) {
        window.location.protocol = "https";
    }
</script>
<script>
    (function (i, s, o, g, r, a, m) {
        i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
            (i[r].q = i[r].q || []).push(arguments)
        }, i[r].l = 1 * new Date(); a = s.createElement(o),
            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
    })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-56318310-1', 'auto');
    ga('send', 'pageview');

</script>

<link rel="stylesheet" type="text/css" href="https://serratus.github.io/quaggaJS/stylesheets/prism.css">

<section class="container">
    <h3>Scan barcode to look up for your asssets</h3>
    <p>Click the <strong>button</strong> next to the input-field to start scanning an <strong>Asssets Barcode</strong>
        barcode</p>
    <div>
        <form>
            <div class="input-field form-group">
                <label for="isbn_inputlable">Scanning:</label>
                <input id="isbn_input" class="isbn" type="text" value="1000001545457">
                <button type="button" class="icon-barcode button scan">&nbsp;</button>
            </div>
        </form>


    </div>
</section>

<section class="container">

    <div>
        <button type="button" class="btn btn-secondary" id="assetcheck">Checking assets?</button>

    </div>
    <div id="barcodetyperesult">
        {{!-- <p id="barcodetyperesultp">This asset is: </p> --}}

    </div>

</section>

<section class="container">

    <div>
        <button type="button" class="btn btn-secondary" id="assetadd">Add to my site</button>
        <input id="siteid" type="text" value="1">

    </div>


</section>



<script src="quagga.js" type="text/javascript"></script>
<script src="index.js" type="text/javascript"></script>
<script src="prism.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="addingassets.js" type="text/javascript"></script>

<script type="text/javascript">

    //$("#assetcheck").click(checkassets);

    var newassetserialno;
    var newassetcatelogid;
    var newassetcatelogname;
    var newassetcatelogmodel;
    var newassetcatelogbrand;
    var newassetcatelogcost;

    $("#assetcheck").click(function (event) {

        //alert("you are checking the assets type!");
        var newbarcode = $("#isbn_input").val().trim();
        var newbarcode7 = newbarcode.substring(0, 7);
        //alert(newbarcode7);
        newassetserialno = newbarcode;

        event.preventDefault();
        console.log(newbarcode7);

        $.ajax("/api/scanner/" + newbarcode7, {
            type: "GET"
        }).then(function (r) {
            console.log(r);
            //alert(r);
            console.log("relementid");
            console.log(r.catelog[0].catelogid);
            var newcatelogid = r.catelog[0].catelogid;
            var newcatelogname = r.catelog[0].catelogname;
            var newcatelogmodel = r.catelog[0].model;
            var newcatelogbrand = r.catelog[0].brand;
            var newcatelogcost = r.catelog[0].cost;

            newassetcatelogid = newcatelogid;
            newassetcatelogname = newcatelogname;
            newassetcatelogmodel = newcatelogmodel;
            newassetcatelogbrand = newcatelogbrand;
            newassetcatelogcost = newcatelogcost;

            //$('#barcodetyperesultp').append(newcatelogname);

            $('#barcodetyperesult').empty();
            var newtable = $("<table>");
            var newtable0 = $("<tr>");
            var newtablehid = $("<th>");
            newtablehid.append("Catelog ID");
            var newtablehname = $("<th>");
            newtablehname.append("Category");
            var newtablehmodel = $("<th>");
            newtablehmodel.append("Model");
            var newtablehbrand = $("<th>");
            newtablehbrand.append("Brand");
            var newtablehcost = $("<th>");
            newtablehcost.append("Cost");
            newtable0.append(newtablehid);
            newtable0.append(newtablehname);
            newtable0.append(newtablehmodel);
            newtable0.append(newtablehbrand);
            newtable0.append(newtablehcost);
            var newtabler = $("<tr>");
            var newtabledid = $("<td>");
            newtabledid.append(newcatelogid);
            var newtabledname = $("<td>");
            newtabledname.append(newcatelogname);
            var newtabledmodel = $("<td>");
            newtabledmodel.append(newcatelogmodel);
            var newtabledbrand = $("<td>");
            newtabledbrand.append(newcatelogbrand);
            var newtabledcost = $("<td>");
            newtabledcost.append(newcatelogcost);
            newtabler.append(newtabledid);
            newtabler.append(newtabledname);
            newtabler.append(newtabledmodel);
            newtabler.append(newtabledbrand);
            newtabler.append(newtabledcost);

            newtable.append(newtable0);
            newtable.append(newtabler);
            $('#barcodetyperesult').append(newtable);
            //var rshow=JSON.stringify(r);
            //var rshowonpage=JSON.parse(rshow);
            //console.log(rshow);
            //$('#barcodetyperesultp').html(rshow);
            //location.reload();
        });
    
    
    });



    function checkassets() {

        alert("you are checking the assets type!");
        var newbarcode = $("#isbn_input").val();

        event.preventDefault();

        //   var newbarcode = {
        //     barcodecategory: $("#isbn_input").val().trim()
        //   };
        //var newbarcode = $("#isbn_input").val().trim();
        console.log(newbarcode);
        // Send the get request.
        //    $.ajax({
        //            data: newbarcode,
        //            type: "GET",
        //            dataType : "html",
        //            success: function( data ) {
        //                $('#barcodetyperesult').replaceWith($('#barcodetyperesult').html(data));
        //            },
        //            error: function( xhr, status ) {
        //            alert( "Sorry, there was a problem!" );
        //           },
        //            complete: function( xhr, status ) {
        //                //$('#showresults').slideDown('slow')
        //            }
        //            }); 
    };

    //  $("#assetadd").click(checkassets);
/*
    function checkassets() {

        alert("you are adding this assets to a a site!");
    };
 */


    $("#assetadd").click(function (event) {

        event.preventDefault();
        //alert("you are adding this assets to a a site!");

        console.log("new assets is as below:");
        console.log(newassetserialno);
        console.log(newassetcatelogmodel);
        console.log(newassetcatelogbrand);
        console.log(newassetcatelogname);
        console.log(newassetcatelogcost);
        var assetsiteid = $("#siteid").val();
        console.log(assetsiteid);

        var newassets = {
            serialno: newassetserialno,
            siteid: assetsiteid,
            catelogid: newassetcatelogid,
            assetdescription: newassetcatelogname + ": " + newassetcatelogbrand + " " + newassetcatelogmodel,
            assetcost: newassetcatelogcost
        };

        console.log(newassets);
        /*
            $.ajax("/api/assets/", {
              type: "POST",
              data: newassets
            }).then(function() {
                console.log("New sites added successfully!");
                alert("New assets added to the site successfully!")
                // Reload the page to get the updated list
                location.reload();
              });
          });
        
        */


            $.ajax("/api/scanner/" + newassets.serialno + "/" + newassets.siteid + "/" + newassets.catelogid + "/" + newassets.assetdescription + "/" + newassets.assetcost, {
              type: "POST",
            }).then(
              function() {
                console.log("created new assets at the site!");
                // Reload the page to get the updated list
               // location.reload();
              });
          

var siteupatecount = 0;
var siteupdatecost;

/*
            $.ajax("/api/scannersitefind/" + newassets.siteid, {
            type: "GET"
            }).then(function (r) {
            console.log(r);
            //alert(r);
            console.log("relementid");
            siteupdatecount = r.sites[0].siteassetcount + 1;
            siteupdatecost = r.sites[0].siteassetcost + newassets.assetcost;
            console.log("site find to be updated with following");
            console.log(siteupdatecost);
            console.log(siteupdatecount);
            });
*/    
            

       
            $.ajax("/api/scannersiteupdate/" + newassets.siteid + "/" + newassets.assetcost, {
             type: "PUT",
            // data: {siteassetcount: siteupatecount}
            }).then(function() {
            console.log("site updated is: ");
            console.log("updated id ", newassets.siteid);
            alert("Added to the site successfully!");
            // Reload the page to get the updated list
            //location.reload();
            });

          
          
          
          
          
          
          
          
          
          
          });



    const homepage = function () {

        $("#reqister").hide();
        $(".home").hide();
        $(".admin").hide();
        $(".mysite").show();
        $(".site").hide();
        $(".index").hide();
        $(".login").hide();
        //Test
        $(".test").hide();
    };
    homepage();

</script>


<!-- <script src="https://serratus.github.io/quaggaJS/javascripts/scale.fix.js"></script> -->
<script src="scale.fix.js"></script>
<script src="scanner.js"></script>